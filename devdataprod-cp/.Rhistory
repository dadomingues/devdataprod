getwd()
read.csv("dan.csv")
dir()
getwd()
x <- 4L
class(x)
x <- c(4,"a",TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x
x[[2]]
class(x[[2]])
x <- 1:4
y <- 2:3
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x<=5]<-0
x
dir()
read.csv("hw1_data.csv")
read.csv("hw1_data.csv",skip=46)
read.csv("hw1_data.csv",skip=46,nrows=2)
read.csv("hw1_data.csv")
arq <- read.csv("hw1_data.csv")
bad <- is.na(arq)
bad
length(arq[,1=TRUE])
length(arq[,1])
length(arq)
length(arq[1,1])
length(arq[,1]=T)
arq[,1]
arq[1,1]
arq[1,]
sum(is.na(arq[,1]))
sum(!is.na(arq[,1]))
mean(!is.na(arq[,1]))
!is.na(arq[,1])
arq
arq[,1]
mean(arq[,1])
arq[,1][is.na(arq[,1])]
arq[,1][!is.na(arq[,1])]
ozone <- arq[,1][!is.na(arq[,1])]
oxone
ozone
mean(ozone)
ozoneds <- arq[,2][arq[,1]>37,arq[,4]>90]
ds <- arq[arq[,1]>37]
ds <- arq[][arq[,1]>37]
ds <- arq[,1:6][arq[,1]>37]
ds <- arq[,6][arq[,1]>37]
ds
ds <- arq[,][arq[,1]>37]
ds <- arq[,][arq[,1]>37]
ds <- arq[,1:6][arq[,1]>37]
ds <- arq[ ,1:6][arq[,1]>37]
ds <- arq[ , ][arq[,1]>37]
ds <- arq[arq[,1]>37]
ds <- arq[][arq[,1]>37]
arq
arq[]
arq[][arq,1 > 20]
arq[][arq[,1] > 20]
arq[][arq[1] > 20]
arq[][arq[1,] > 20]
arq[][arq[,1] > 20]
arq[]
arq[,1=9]
arq[arq[,1]=9]
arq[arq[,1]==9]
arq
arq$Ozone
arq[arq$Ozone>30]
arq[,1][arq$Ozone>30]
arq[,1:6][arq$Ozone>30]
arq[,][arq$Ozone>30]
arq[][arq$Ozone>30]
arq[arq$Ozone>30]
arq[[arq$Ozone>30]]
okOzone <- arq[,1][arq$Ozone>30]
okOzone
okOzone <- okOzone[!is.na(okOzone)]
okOzone
arq[arq$Ozone>30]
arq[,1][arq$Ozone>30]
arq[,1][arq$Ozone>30 && !is.na(arq$Ozone)]
arq[,1][arq$Ozone>30 & !is.na(arq$Ozone)]
[arq$Ozone>30 & !is.na(arq$Ozone)]
arq$Ozone>30 & !is.na(arq$Ozone)
okOzone <- arq$Ozone>30 & !is.na(arq$Ozone)
okOzone
okOzone <- arq$Ozone>31 & !is.na(arq$Ozone)
okTemp <- arq$Temp>90 & !is.na(arq$Temp)
good <- complete.cases(okOzone,okTemp)
good
okOzone
okTemp
good <- complete.cases(okOzone,okTemp)
good
okOzone + okTemp
okOzone & okTemp
arq[okOzone & okTemp]
arq
good <- okOzone & okTemp
good
arq[good]
arq[,4][good]
mean(arq[,4][good])
mean(arq[,2][good])
mean(arq[,4][arq[,5]=6])
mean(arq[,4][arq[,5]==6])
max(arq[,1][arq[,5]==5])
max(arq[,1])
arq[,1]
max([arq,1])
max(arq[,1])
max(arq[,1][!is.na(arq[,1])])
max(arq[,1][!is.na(arq[,1]) & arq[,5]==5])
objects()
q()
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 +100
mySqrt <- sqrt(z - 1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
`:`
':'
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect <= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Daniel")
my_name
paste(my_name, collapse=" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep=" ")
c(c(1,2,3),c("X","Y","Z"))
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep="-")
bye()
q()
find_rtools()
library(devtools)
find.package("devtools")
find.package("kernSmooth")
install(kernSmooth)
package.install(kernSmooth)
install.packages("kernSmooth")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.0.3/library")
q()
swirl()
swirl()
swirl()
library("swirl")
swirl()
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
myData <- sample(c(y,z),100)
myNA <- is.na(myData)
myNa
myNa
myNA
myNA <- myData == NA
myData == NA
sum(myNA)
myData
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names()
names(vect)
vect2 <- c(11,2,NA)
names(vect) <- c("foo","bar","norf")
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
q()
print("dan")
x<-4
y<-if(x=0){
y<-if(x==0){
10
}
y
y<-if(x==0){
10 } else {
5}
y
for(i in 1:4) print(i)
count <- 10
while (count == 0) {
print(count)
count <- count - 1
}
q()
log(3)
log(1)
log(-1)
printmessage <- function(x) {}
printmessage <- function(x) {
if (x > 0)
print("maior")
else
print("menor igual")
}
printmessage(5)
x
vetor <- 1:5
barplot(vetor)
str(vetor)
barplot(vetor,horiz=TRUE)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
rnorm(5)
rnorm(5)
rpois(10)
rpois(10,2)
rpois(10,1)
rpois(10,1)
rpois(10,2)
rpois(10,20)
ppois(10)
ppois(10,2)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "1e78daf46b4cf44ebb9d")
myapp <- oauth_app("github", key="1e78daf46b4cf44ebb9d",secret="ad1aa83726c35cab896b9d738fdb92ca3e21f339")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/rate_limit", config(token = github_token))
stop_for_status(req)
content(req)
date()
sys.date()
Sys.date()
time()
Sys.time()
Sys.Date()
append
y <- seq(1:10)
rev(y)
y2 <- rev(y)
y2
order(y)
sort(y)
system("dir")
system("cmd")
dir()
system("dir")
sequence()
sequence(3)
sequence(5)
sequence(c(3,5))
sequence(c(3,2))
sequence(c(3,2),2)
sequence(c(3,2),seq_len=2)
sign(y)
sign(y2)
y <- seq(-1:10)
y
y <- seq(-5:5)
y
y[1] <- -4
y
sign(y)
y[3] <- 0
sign(y)
matrix(1:10,2,5)
x2 <- matrix(1:10,2,5)
sign(x2)
mat.or.vec(5)
mat.or.vec(5,1)
mat.or.vec(5,3)
matrix(seq("a","f"),3,2)
matrix(c("a","b","c","d"),2,3)
matrix(c("a","b","c","d"),2,2)
x <- matrix(c("a","b","c","d"),2,2)
toupper(x)
sign(x)
cat(x)
cat(matrix)
cat(y2)
z <- cat(y2)
z
x3 <- 3.4567
round(x3)
floor(x3)
ceiling(x3)
round(x3,2)
trunc(x3,2)
trunc(x3)
signif(x3,2)
signif(x3,3)
fix(d)
pi
letters
LETTERS
month.abb
month.name
formatC(1.234, format="fg")
formatC(1.234, digits=6)
formatC(1.234, digits=6, width=10)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x,p)
rownames(temp) <- c("x","Prob")
temp
1*1
1*0.1 + 4*0.2 + 9*0.3 + 16*0.4
sd(temp[1,])
sd(temp[1,]) / 4
1*0.1 + 2*0.2 + 3*0.3 + 4*0.4
x <-x <- c(0.18, -1.54, 0.42, 0.95)
;
x
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w*x)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x~y)
yc <- y - mean(y)
xc <- x - mean(x)
beta1 <- sum(yc * xc) / sum(xc ^ 2)
c(beta1, coef(lm(y ~ x))[2])
library(datasets)
data(mtcars)
mtcars$mpg
yc <- mtcars$mpg - mean(mtcars$mpg)
xc <- mtcars$wt - mean(mtcars$wt)
beta1 <- sum(yc * xc) / sum(xc ^ 2)
c(beta1, coef(lm(mtcars$mpg ~ mtcars$wt))[2])
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x))/sd(x)
xn[1]
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lm(x~1)
lm(0,0)
lm(c(0),c(0)
)
summary(mtcars)
dir()
wd()
setwd("~/Coursera/devdataprod/shinyapp")
runApp()
library(shiny)
install.packages("shiny")
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
colors
colors(TRUE)
colors(FALSE)
require(graphics)
palette()
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
lm(mpg ~ hp, data=mtcars)
summary.lm(mpg ~ hp, data=mtcars)
testelm <- lm(mpg ~ hp, data=mtcars)
summary(testelm)
testelm
testelm[1]
testelm[2]
testelm[0]
testelm[1]
testelm[1,1]
testelm[1]
testelm[1]$coefficients
testelm[1]$coefficients[1]
testelm[1]$coefficients[2]
cor(mpg,hp)
cor(mtcars$mpg,mtcars$hp)
cor("mtcars$mpg","mtcars$hp")
cor(mpg,hp)
cor(mtcars$mpg,mtcars$hp)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
runApp(launch.browser = FALSE)
library(shinyapps)
library(shinyapps)
shinyapps:setAccountInfo()
shinyapps::setAccountInfo()
shinyapps::setAccountInfo(shinyapps::setAccountInfo(name='dadomingues', token='CC0E90E53AA5BB1FAB0307CC6C7260FF', secret='qAxLQOWIBDXQkF/pxsxH8ifDhJHmxA/bfKZsJXay'))
